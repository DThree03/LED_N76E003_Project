C51 COMPILER V9.60.0.0   SYS                                                               03/26/2021 01:03:35 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE SYS
OBJECT MODULE PLACED IN .\Output\sys.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\..\Library\StdDriver\src\sys.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(
                    -..\..\Library\DeviceDriver;..\..\Library\StdDriver\inc) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\sys.lst) TABS
                    -(2) OBJECT(.\Output\sys.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2019 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          //********************************************************************************************************
             -***
   8          //  Website: http://www.nuvoton.com
   9          //  E-Mail : MicroC-8bit@nuvoton.com
  10          //  Date   : Jan/21/2019
  11          //********************************************************************************************************
             -***
  12          #include "sys.h"
  13          
  14          bit BIT_TMP;
  15          
  16          unsigned char data  TA_REG_TMP,BYTE_TMP,SFRS_TMP;
  17          
  18            /**
  19            * @brief This API configures modify system HIRC value
  20            * @param[in] u8FsysMode . Valid values are:
  21            *                       - \ref HIRC_24                 :Internal HIRC 24MHz .
  22            *                       - \ref HIRC_16                 :Internal HIRC 16MHz.
  23            *                       - \ref HIRC_166                :Internal HIRC 16.6MHz.
  24            * @note      None.
  25            * @exmaple : MODIFY_HIRC(HIRC_24);
  26            */
  27           void MODIFY_HIRC(unsigned char u8HIRCSEL)
  28          {
  29   1          unsigned char data hircmap0,hircmap1;
  30   1          unsigned int trimvalue16bit;
  31   1          /* Check if power on reset, modify HIRC */
  32   1          SFRS = 0 ;
  33   1          switch (u8HIRCSEL)
  34   1          {
  35   2            case HIRC_24:
  36   2              IAPAL = 0x38;
  37   2            break;
  38   2            case HIRC_16:
  39   2              IAPAL = 0x30;
  40   2            break;
  41   2            case HIRC_166:
  42   2              IAPAL = 0x30;
  43   2            break;
  44   2          }
  45   1          set_CHPCON_IAPEN;
  46   1          IAPAH = 0x00;
C51 COMPILER V9.60.0.0   SYS                                                               03/26/2021 01:03:35 PAGE 2   

  47   1          IAPCN = READ_UID;
  48   1          set_IAPTRG_IAPGO;
  49   1          hircmap0 = IAPFD;
  50   1          IAPAL++;
  51   1          set_IAPTRG_IAPGO;
  52   1          hircmap1 = IAPFD;
  53   1          clr_CHPCON_IAPEN;
  54   1          switch (u8HIRCSEL)
  55   1          {
  56   2            case HIRC_166:
  57   2              trimvalue16bit = ((hircmap0 << 1) + (hircmap1 & 0x01));
  58   2              trimvalue16bit = trimvalue16bit - 15;
  59   2              hircmap1 = trimvalue16bit & 0x01;
  60   2              hircmap0 = trimvalue16bit >> 1;
  61   2      
  62   2            break;
  63   2            default: break;
  64   2          }
  65   1          TA = 0xAA;
  66   1          TA = 0x55;
  67   1          RCTRIM0 = hircmap0;
  68   1          TA = 0xAA;
  69   1          TA = 0x55;
  70   1          RCTRIM1 = hircmap1;
  71   1          clr_CHPCON_IAPEN;
  72   1          PCON &= CLR_BIT4;
  73   1      }
  74          
  75          
  76            /**
  77            * @brief This API configures system clock source
  78            * @param[in] u8FsysMode . Valid values are:
  79            *                       - \ref FSYS_HIRC                :Internal HIRC (16MHz as default).
  80            *                       - \ref FSYS_LIRC                :Internal LIRC.
  81            *                       - \ref FSYS_OSCIN_P00           :External clock input from P0.0.
  82            * @note      None.
  83            * @exmaple : FsysSelect(FSYS_LIRC);
  84            */
  85          void FsysSelect(unsigned char u8FsysMode)
  86          {
  87   1        switch (u8FsysMode)
  88   1        {
  89   2              //***** HIRC enable part *****  
  90   2          case FSYS_HIRC:
  91   2              ClockEnable(FSYS_HIRC);                 //Enable HIRC
  92   2              ClockSwitch(FSYS_HIRC);                 //Switching system clock HIRC
  93   2          break;
  94   2          
  95   2          //***** LIRC enable part*****
  96   2          case FSYS_LIRC:
  97   2              ClockSwitch(FSYS_LIRC);                 // LIRC always on switch system to LIRC
  98   2              clr_CKEN_HIRCEN;                        // Disable HIRC if needed 
  99   2          break;
 100   2          
 101   2          /***** ECLK enable part clock in with P3.0 *****/ 
 102   2          case FSYS_OSCIN_P30:
 103   2              ClockEnable(FSYS_HIRC);                 //Enable and system clock to HIRC
 104   2              ClockSwitch(FSYS_HIRC);
 105   2              ClockEnable(FSYS_OSCIN_P30);            //Enable External clock source
 106   2              ClockSwitch(FSYS_OSCIN_P30);            //Switching system clock to OSCIN 
 107   2              clr_CKEN_HIRCEN;                        //step5: disable HIRC if needed 
 108   2          break;
C51 COMPILER V9.60.0.0   SYS                                                               03/26/2021 01:03:35 PAGE 3   

 109   2        }
 110   1      }
 111          
 112          void ClockEnable(unsigned char u8FsysMode)
 113          {
 114   1        switch (u8FsysMode)
 115   1        {
 116   2          /***** HIRC enable part ******/
 117   2          case FSYS_HIRC:
 118   2              set_CKEN_HIRCEN;                        //step1: Enable extnal clock source.
 119   2              while((CKSWT|CLR_BIT5)==CLR_BIT5);      //step2: check clock source status and wait for ready
 120   2          break;
 121   2          /***** ECLK P30 enable part ******/
 122   2          case FSYS_OSCIN_P30:
 123   2              TA=0xAA;TA=0x55;CKEN|=0xC0;                        //step1: Enable extnal clock source.
 124   2              while((CKSWT|CLR_BIT3)==CLR_BIT3);      //step2: check clock source status and wait for ready
 125   2          break;
 126   2        }
 127   1      }
 128          
 129          void ClockDisable(unsigned char u8FsysMode)
 130          {
 131   1        SFRS = 0;
 132   1        switch (u8FsysMode)
 133   1        {
 134   2           /***** HIRC Disable part ******/
 135   2          case FSYS_HIRC:
 136   2              clr_CKEN_HIRCEN;                        
 137   2          break;
 138   2          //***** ECLK from P3.0 Disable part ******/
 139   2          case FSYS_OSCIN_P30:
 140   2             TA=0xAA;TA=0x55;CKEN&=0x3F;
 141   2          break;
 142   2        }
 143   1      }
 144          
 145          void ClockSwitch(unsigned char u8FsysMode)
 146          {
 147   1        SFRS = 0 ;
 148   1        BIT_TMP=EA;EA=0;
 149   1        switch (u8FsysMode)
 150   1        {
 151   2          /***** HIRC Disable part ******/
 152   2          case FSYS_HIRC:
 153   2              clr_CKSWT_OSC1;
 154   2              clr_CKSWT_OSC0;
 155   2          break;
 156   2          /***** LIRC Disable part******/
 157   2          case FSYS_LIRC:
 158   2              set_CKSWT_OSC1;
 159   2              clr_CKSWT_OSC0;
 160   2          break;
 161   2          /***** ECLK P30 Disable part ******/
 162   2          case FSYS_OSCIN_P30:
 163   2              set_CKSWT_ECLKST;
 164   2          break;
 165   2        }
 166   1        EA = BIT_TMP;
 167   1      }
 168          


C51 COMPILER V9.60.0.0   SYS                                                               03/26/2021 01:03:35 PAGE 4   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    460    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
